What happens when you initialize a repository? Why do you need to do it?
	On intializing a repository, it becomes a git repository, which helps in tracking the history of files in it. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	staging area contains the file to be committed to repository.
	It helps us to keep track of what files to be added to repository.

How can you use the staging area to make sure you have one commit per logical
change?
	Add only files per logical change into stagging area and then commit them one by one per logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	when we want to make changes into repository in non-linear way, branches would be helpful in that case.
	Brances help in collabaration, making independant changes and parallel changes.

How do the diagrams help you visualize the branch structure?
	Diagrams help in visualizing how many branches are present and how they are related.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	By merging two branches, their commits are combined and label is changed to branch on which merging is done.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	Pros- easy process
	cons- doesn't resolve the conflicts